
@{
    ViewBag.Title = "View Memberships";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model dynamic
<div class="row upp2">
    <!-- Column -->
    <div class="row rolebtns2">
        <div class="col-lg-6 col-xlg-6 col-md-6">
            <form action="#">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchmembershp" placeholder="Type the product type.." aria-label="">
                    <div class="input-group-append">
                        <span class="input-group-text"><i class="mdi  mdi-magnify"></i></span>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-lg-6 col-xlg-6 col-md-6">
            @if (Session["user"] != null)
            {
                if (Session["user"].ToString() == "Admin")
                {
                    <button type="button" class="btn btn-info btnaddrole" data-toggle="modal" data-target="#addcat" onclick="location.href='@Url.Action("", "Membership")'" data-whatever="">Add Membership</button>
                }
                else {
                    if (@ViewBag.Create != false)
                    {
                        <button type="button" class="btn btn-info btnaddrole" data-toggle="modal" data-target="#addcat" onclick="location.href='@Url.Action("", "Membership")'" data-whatever="">Add Membership</button>
                    }
                    else {

                        <button type="button" disabled class="btn btn-info btnaddrole" data-toggle="modal" data-target="#addcat" onclick="location.href='@Url.Action("", "Membership")'" data-whatever="">Add Membership</button>
                    }
                }
            }
            
        </div>
    </div>
    <div class="addrolestab">

        <table class="table table-hover table-responsive">
            <thead>
                <tr>
                    <th>Membership Name</th>
                    <th>Amount</th>
                    <th>Expiry Date</th>
                    <th>Capacity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="memship">
                @if (Model.membership.Count > 0)
                {
                    foreach (var data in Model.membership)
                    {
                        <tr>
                            <td>@data.Name</td>
                            <td>@data.Amount OMR</td>
                            <td>@data.EndDate.ToString("d")</td>
                            <td>@data.Capacity</td>
                            <td>
                   
                                @if (Session["user"] != null)
                                {
                                    if (Session["user"].ToString() == "Admin")
                                    {
                                        <button type="button" class="btn btn-info editbtn1" onclick="editClass(@data.Id)">Edit</button>
                                        <button type="button" class="btn btn-primary deletebtn1" onclick="location.href='@Url.Action("DeleteMembership", "Membership", new { id = data.Id })'">Delete</button>
                                    }
                                    else
                                    {
                                        if (@ViewBag.Edit != false)
                                        {
                                            <button type="button" class="btn btn-info editbtn1" onclick="editClass(@data.Id)">Edit</button>
                                        }
                                        else
                                        {
                                            <button type="button" disabled  class="btn btn-info editbtn1" onclick="editClass(@data.Id)">Edit</button>
                                        }
                                        if (@ViewBag.Delete != false)
                                        {
                                            <button type="button" class="btn btn-primary deletebtn1" onclick="location.href='@Url.Action("DeleteMembership", "Membership", new { id = data.Id })'">Delete</button>
                                        }
                                        else
                                        {
                                            <button type="button" disabled class="btn btn-primary deletebtn1" onclick="location.href='@Url.Action("DeleteMembership", "Membership", new { id = data.Id })'">Delete</button>
                                        }
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" align="center">
                            <div class="alert alert-info">
                                <i class="ti-info" style="margin-right: 5px;border-radius: 50%;border: 1px solid #249ddc; padding: 3px; font-size: 10px;"></i> No Membership Found!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">  </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@Html.Partial("_EditMembership" , new gym_mgmt_01.Models.Membership())
@section scripts{
    <!-- This Page JS -->
   
    <script type="text/javascript">

        function editClass(id) {
            var reMsAjax = /^\/Date\((d|-|.*)\)[\/|\\]$/;
            $.ajax({
                url: "/Membership/getMemberships/" + id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (response) {
               

                    var startDate = new Date(parseInt(response.StartDate.replace(/(^.*\()|([+-].*$)/g, '')));
                    var endDate = new Date(parseInt(response.EndDate.replace(/(^.*\()|([+-].*$)/g, '')));
                   
                    var sday = startDate.getDay();
                    var smonth = startDate.getMonth();
                    var syear = startDate.getFullYear();

                    var sDate = minTwoDigits(syear) + '-' + minTwoDigits(smonth + 1) + '-' + minTwoDigits(sday);

                    var eday = endDate.getDay();
                    var emonth = endDate.getMonth();
                    var eyear = endDate.getFullYear();

                    var eDate =  minTwoDigits(eyear) + '-' +minTwoDigits(emonth+1 ) + '-' + minTwoDigits(eday);
                    $('#memID').val(response.Id);
                    $('#membrshpname').val(response.Name);
                    $('#description').val(response.Description);
                    $('#memAmount').val(response.Amount);
                    $('#StartDate').val(sDate);
                    $('#EndDate').val(eDate);
                    $('#preexpdays').val(response.PreExpirationDays);
                    $('#capacity').val(response.Capacity);
                    $('#editMembership').modal('show');
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            return false;
        }
        $("#searchmembershp").on("keyup", function () {
            var value = $(this).val().toUpperCase();
            $("#memship tr").filter(function () {
                $(this).toggle($(this).text().toUpperCase().indexOf(value) > -1)
            });
        });
        function minTwoDigits(n) {
            return (n < 10 ? '0' : '') + n;
        }
    </script>
}

