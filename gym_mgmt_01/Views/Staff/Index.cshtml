
@model gym_mgmt_01.Models.Staff
@{
    ViewBag.Title = "Staff | Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Index", "Staff", FormMethod.Post, new { enctype = "multipart/form-data" , id="staffreg" ,  @class="needs-validation" , @novalidate="" }))
{
    @Html.AntiForgeryToken()
    <div class="row upp2">
        <!-- Column -->
        <div class="col-lg-3 col-xlg-3 col-md-3">
            <div class="card">
                <div class="card-body profilecard">
                    <center class="m-t-30">
                        <img src="~/assets/images/users/deafult.png" class="img-circle" id="profImg" width="150" />
                        <h4 class="card-title m-t-10">Staff</h4>
                        <!--    <h6 class="card-subtitle">Accoubts Manager Amix corp</h6> -->
                        <div class="row text-center justify-content-md-center">
                            <div class="upload-btn-wrapper">
                                <button class="btn upld">Upload Photo</button>
                                <input type="file" id="upldImage" name="ImageFile" />
                            </div>
                        </div>
                    </center>
                </div>
            </div>
        </div>
        <!-- Column -->
        <!-- Column -->
        <div class="col-lg-9 col-xlg-9 col-md-10">
            <div class="card">
                <!-- Nav tabs -->
                <!-- Tab panes -->
                <div class="tab-content">

                    <div class="tab-pane active" id="settings" role="tabpanel">

                        <div class="col-12">
                            <div class="row">
                                &nbsp;
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-body">
                                        <h4 class="card-title">Staff</h4>
                                        <form id="staffReg" method="post">
                                            <div class="form-row">
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-row">
                                                <div class="col-md-4 mb-3">
                                                    @*<label for="validationDefault01">First name</label>*@
                                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @for = "validationDefault01" })

                                                    @*<input type="text" name="firstName" class="form-control" id="validationDefault01" placeholder="First name" value="" required>*@
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", @required = "" } })
                                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    @*<label for="validationDefault02">Last name</label>*@
                                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @for = "validationDefault01" })
                                                    @*<input type="text" name="lastName" class="form-control" id="validationDefault02" placeholder="Last name" value="" required>*@
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", @required = "" } })
                                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    <label for="validationDefaultUsername">Email</label>
                                                    <div class="input-group">
                                                        <input type="text" name="email" class="form-control" id="validationDefaultUsername" placeholder="Email Address" aria-describedby="inputGroupPrepend2" required>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-row">
                                                <div class="col-md-4 mb-3">
                                                    <label for="validationDefault03">Gender</label>
                                                    <select class="custom-select" name="gender" required>
                                                        <option value="--">--Select Gender--</option>
                                                        <option value="Male">Male</option>
                                                        <option value="Female">Female</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    <label for="validationDefault04">Password</label>
                                                    <input type="password" name="password" class="form-control" id="validationDefault04" placeholder="Password" required>
                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    <label for="validationDefault05">Confirm Password</label>
                                                    <input type="password" class="form-control" id="validationDefault05" placeholder="Confirm Password" required>
                                                </div>

                                            </div>
                                            <div class="form-row">
                                                <div class="col-md-4 mb-3">
                                                    <label for="validationDefault04">Designation</label>
                                                    <input type="text" name="designation" class="form-control" id="validationDefault04" placeholder="Designation" required>
                                                </div>
                                            </div>
                                            <button class="btn btn-primary" type="submit">Add</button>
                                        </form>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>

                </div>

            </div>
        </div>
        <!-- Column -->
    </div>
    <!---Modal Popup---->
    <div class="modal" id="addroles" tabindex="-1" role="dialog" aria-labelledby="addrolesLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="addrolesLabel">Add Roles</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <form>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Role Group</th>
                                    <th scope="col">Role</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Add Member</td>
                                    <td>

                                        <select class="form-control">
                                            <option value="">Admin</option>
                                            <option value="">Staff</option>
                                            <option value="">Trainer</option>
                                        </select>

                                    </td>
                                    <td>
                                        <input class="inputcheckbox" type="checkbox" name="" value="">
                                    </td>
                                </tr>
                                <tr>
                                    <td>View Staff</td>
                                    <td>
                                        <select class="form-control">
                                            <option value="">Admin</option>
                                            <option value="">Staff</option>
                                            <option value="">Trainer</option>
                                        </select>
                                    </td>
                                    <td>
                                        <input class="inputcheckbox" type="checkbox" name="" value="">
                                    </td>
                                </tr>
                                <tr>
                                    <td>Delete Staff</td>
                                    <td>
                                        <select class="form-control">
                                            <option value="">Admin</option>
                                            <option value="">Staff</option>
                                            <option value="">Trainer</option>
                                        </select>
                                    </td>
                                    <td>
                                        <input class="inputcheckbox" type="checkbox" name="" value="">
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-info" data-dismiss="modal">Assign</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>

                </div>
            </div>
        </div>
    </div>
}
<!------------------>
@if (ViewBag.result == "yes") {
        <script type="text/javascript">
            $(function () {
                "use strict"
                $.toast({
                    heading: 'Staff Added Successfully '
                    , text: 'Use the predefined ones, or specify a custom position object.'
                    , position: 'top-right'
                    , loaderBg: '#ff6849'
                    , icon: 'info'
                    , hideAfter: 3500
                    , stack: 6
                });
            });
        </script>
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            $('#upldImage').change(function () {
                readURL(this);
            });
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var form = document.querySelector('#staffreg');
                        var bool = Validate(form);
                        if (!bool) {
                             $('#profImg').attr('src' , '/assets/images/users/deafult.png');
                        } else {
                             $('#profImg').attr('src', e.target.result);
                        }
                       
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
            var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];    
            function Validate(oForm) {
                var arrInputs = oForm.getElementsByTagName("input");
                for (var i = 0; i < arrInputs.length; i++) {
                    var oInput = arrInputs[i];
                    if (oInput.type == "file") {
                        var sFileName = oInput.value;
                        if (sFileName.length > 0) {
                            var blnValid = false;
                            for (var j = 0; j < _validFileExtensions.length; j++) {
                                var sCurExtension = _validFileExtensions[j];
                                if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                    blnValid = true;
                                    break;
                                }
                            }
                            if (!blnValid) {
                                alert("Sorry, " + sFileName + " is invalid, allowed extensions are: " + _validFileExtensions.join(", "));
                                return false;
                            }
                        }
                    }
                }
  
                return true;
            }
            (function() {
                'use strict';
                window.addEventListener('load', function() {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                     if (form.checkValidity() === false) {
                              event.preventDefault();
                              event.stopPropagation();
                     }
                        form.classList.add('was-validated');
                }, false);
                 });
              }, false);
            })();
        });
    </script>
}
